@using CarRepairReport.Extensions
@model CarRepairReport.Models.ViewModels.CarVms.CreateCarVm

@{
    ViewBag.Title = "Add";
}

<h2>Add</h2>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <div class="form-group">
            
            <label class="control-label col-md-2">@LR("system.car.make", Model.LanguageCode).ToString().ToCapital()</label>
            @*@Html.LabelFor(model => model.Make, htmlAttributes: new {@class = "control-label col-md-2"})*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.Make, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Make, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.car.model", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.VIN, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.car.vin", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.VIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VIN, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @*@Html.LabelFor(model => model.FirstRegistration, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.common.firstregistration", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstRegistration, new { htmlAttributes = new { @class = "form-control date-picker" } })
                @Html.ValidationMessageFor(model => model.FirstRegistration, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @*@Html.LabelFor(model => model.RunningDistanceKm, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.car.mountedon.km", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RunningDistanceKm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RunningDistanceKm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.RunningDistanceM, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.car.mountedon.mi", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RunningDistanceM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RunningDistanceM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(m => m.FuelType, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.engine.fueltype", Model.LanguageCode).ToString().ToCapital()</label>
            
            <div class="col-md-10">
                
                    <div class="row">

                    @{
                        int counter = 0;

                        foreach (var ft in Model.FuelTypeValues)
                        {
                            if (counter != 0 && counter % 2 == 0)
                            {
                                @:</div>
                                @:<div class="row">
                            }
                            
                            <div class="col-md-2">

                                @Html.RadioButtonFor(m => m.FuelType, ft.Key, new { id = ft.Key + "ft" })
                                <label for=@(ft.Key + "ft")>@ft.Value</label>

                            </div>

                            counter = counter + 1;
                        }
                    }

                    </div>

            </div>

        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.EngineSize, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.engine.enginesize", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EngineSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EngineSize, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @*@Html.LabelFor(model => model.EnginePowerHp, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.engine.power.hp", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnginePowerHp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnginePowerHp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.EnginePowerKw, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.engine.power.kw", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnginePowerKw, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnginePowerKw, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(m => m.GearBoxType, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR(Model.GearBoxType.ToString(), Model.LanguageCode).ToString().ToCapital()</label>
            
            <div class="col-md-10">
                <div class="row">
                
                    @{
                        counter = 0;

                        foreach (var gb in Model.GearBoxValues)
                        {
                            if (counter != 0 && counter % 2 == 0)
                            {
                                @:</div>
                                @:<div class="row">
                            }

                            <div class="col-md-2">
                                @Html.RadioButtonFor(m => m.GearBoxType, gb.Key, new { id = gb.Key + "gb" })
                                <label for=@(gb.Key + "gb")>@gb.Value</label>
                            </div>

                            counter = counter + 1;
                        }
                    }

                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.NumberOfGears, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.gearbox.numberofgears", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfGears, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfGears, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@LR("system.common.create", Model.LanguageCode)" class="btn btn-default" />
            </div>
        </div>
    </div>
                    }

<div>
    @Html.ActionLink(LR("system.common.backtoprofile", Model.LanguageCode).ToString().ToCapital(), "UserProfile", "User")
</div>

<script type="text/javascript">
    $(function () {
        // This will make every element with the class "date-picker" into a DatePicker element
        $('.date-picker').datepicker();
    })
</script>
