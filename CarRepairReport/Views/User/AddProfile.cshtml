@using CarRepairReport.Extensions
@using CarRepairReport.Extensions.HtmlHelpers
@model CarRepairReport.Models.ViewModels.UserVms.UserProfileVm

@{
    ViewBag.Title = "AddProfile";
}

<h2>Add Profile</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        @{
            var a = nameof(Model.FirstName);
            int b = 0;
        }
        <div class="form-group">
            @*@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.user.firstname", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                

                @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control", id="model-firstName", onkeyup = "onInputChange(this)" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                @if (Model.Errors.ContainsKey(nameof(Model.FirstName)))
                {
                    <span id="model-firstName-error" class="text-danger">@Model.Errors[nameof(Model.FirstName)]</span>
                }
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.user.lastname", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", id ="model-lastName", onkeyup = "onInputChange(this)" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                @if (Model.Errors.ContainsKey(nameof(Model.LastName)))
                {
                    <span id="model-lastName-error" class="text-danger">@Model.Errors[nameof(Model.LastName)]</span>
                }
            </div>
        </div>
        
        
        
        <div class="form-group">
            @*@Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.common.city", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control date-picker", id = "model-City", onchange = "onInputChange(this)" } })
                @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger" })
                @if (Model.Errors.ContainsKey(nameof(Model.CityName)))
                {
                    <span id="model-City-error" class="text-danger">@Model.Errors[nameof(Model.CityName)]</span>
                }
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">@LR("system.common.country", Model.LanguageCode).ToString().ToCapital()</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CountryName, new { htmlAttributes = new { @class = "form-control date-picker", id = "model-country", onchange = "onInputChange(this)" } })
                @Html.ValidationMessageFor(model => model.CountryName, "", new { @class = "text-danger" })
                @if (Model.Errors.ContainsKey(nameof(Model.CountryName)))
                {
                    <span id="model-birthday-error" class="text-danger">@Model.Errors[nameof(Model.CountryName)]</span>
                }
            </div>
        </div>
        
        @*<div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@LR("system.common.create", Model.LanguageCode).ToString().ToCapital()" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Home", "Index", "Home")
</div>

<script type="text/javascript">
    function onInputChange(event) {

        var id = event.id;

        var errorElement = $("#" + id + "-error")[0];

        errorElement.style.display = "none";
    }

</script>
